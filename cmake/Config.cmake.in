#   Sgraphics_FOUND            - True if headers and requested libraries were found
#   Sgraphics_INCLUDE_DIRS     - Sgraphics include directories
#   Sgraphics_LIBRARIES        - Sgraphics component libraries to be linked
#   Sgraphics_VERSION          - version


####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######
####### Any changes to this file will be overwritten by the next CMake run ####
####### The input file was Config.cmake.in                            ########

cmake_policy(SET CMP0057 NEW)

get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../" ABSOLUTE)

macro(set_and_check _var _file)
    set(${_var} "${_file}")
    if(NOT EXISTS "${_file}")
        message(FATAL_ERROR "File or directory ${_file} referenced by variable ${_var} does not exist !")
    endif()
endmacro()

macro(check_required_components _NAME)
    foreach(comp ${${_NAME}_FIND_COMPONENTS})
        if(NOT ${_NAME}_${comp}_FOUND)
            if(${_NAME}_FIND_REQUIRED_${comp})
                set(${_NAME}_FOUND FALSE)
            endif()
        endif()
    endforeach()
endmacro()

####################################################################################

set(_supported_components
    sdl_font_cache
    convertion
    geometry
    engine
)

message("Found the following Sgraphics libraries:")

# Get definition of 'find_dependency' macro
include(CMakeFindDependencyMacro)

foreach(_comp ${Sgraphics_FIND_COMPONENTS})
    find_dependency(GLEW)
    find_dependency(SDL2)
    if (NOT _comp IN_LIST _supported_components)
        set(Sgraphics_FOUND False)
        set(Sgraphics_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
    endif()
    message(${_comp})
    include("${CMAKE_CURRENT_LIST_DIR}/Sgraphics${_comp}Targets.cmake")
endforeach()

message("Sgraphics_VERSION: ${Sgraphics_VERSION}")
set (Sgraphics_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/../include")
